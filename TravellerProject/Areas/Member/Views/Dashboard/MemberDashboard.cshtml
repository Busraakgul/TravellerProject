@{
    ViewData["Title"] = "MemberDashboard";
    //Layout = "~/Views/Shared/_UserLayout.cshtml";
    Layout = null;
}

<!DOCTYPE html>
<html class="loading" lang="en" data-textdirection="ltr">
<head>
    <meta http-equiv="Content-Type" content="text/html; charset=UTF-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <title>Traveller's Path Member Panel</title>
    <link rel="apple-touch-icon" href="https://cdn-icons-png.flaticon.com/512/201/201623.png">
    <link rel="shortcut icon" type="image/x-icon" href="https://cdn-icons-png.flaticon.com/512/201/201623.png">
    <link href="https://fonts.googleapis.com/css?family=Muli:300,300i,400,400i,600,600i,700,700i%7CComfortaa:300,400,700" rel="stylesheet">
    <link href="https://maxcdn.icons8.com/fonts/line-awesome/1.1/css/line-awesome.min.css" rel="stylesheet">
    <link rel="stylesheet" type="text/css" href="~/member/theme-assets/css/vendors.css">
    <link rel="stylesheet" type="text/css" href="~/member/theme-assets/vendors/css/charts/chartist.css">
    <link rel="stylesheet" type="text/css" href="~/member/theme-assets/css/app-lite.css">
    <link rel="stylesheet" type="text/css" href="~/member/theme-assets/css/core/menu/menu-types/vertical-menu.css">
    <link rel="stylesheet" type="text/css" href="~/member/theme-assets/css/core/colors/palette-gradient.css">
    <link rel="stylesheet" type="text/css" href="~/member/theme-assets/css/pages/dashboard-ecommerce.css">
</head>
<body class="vertical-layout vertical-menu 2-columns   menu-expanded fixed-navbar" data-open="click" data-menu="vertical-menu" data-color="bg-chartbg" data-col="2-columns">

    <nav class="header-navbar navbar-expand-md navbar navbar-with-menu navbar-without-dd-arrow fixed-top navbar-semi-light">
        <div class="navbar-wrapper">
            <div class="navbar-container content">
                <div class="collapse navbar-collapse show" id="navbar-mobile">

                    @await Component.InvokeAsync("_MemberLayoutSearch")

                    @await Component.InvokeAsync("_MemberLayoutLanguages")

                    @await Component.InvokeAsync("_MemberLayoutNavbar")

                </div>
            </div>
        </div>
    </nav>

    @await Component.InvokeAsync("_MemberLayoutSideBar")

    <div class="navigation-background"></div>
    <div class="app-content content">
        <div class="content-wrapper">
            <div class="content-wrapper-before"></div>
            <div class="content-header row">
            </div>
            <div class="content-body">
                <div class="row match-height">
                    <div class="col-12">
                        <div class="">
                            <div id="gradient-line-chart1" class="height-250 GradientlineShadow1"></div>
                        </div>
                    </div>
                </div>

                @await Component.InvokeAsync("_MemberDashboardPartial")

                <div class="row match-height">
                    @await Component.InvokeAsync("_MemberStatistics")

                    @model List<Destination>
                    <div class="col-xl-4 col-lg-12">
                        <div class="card h-100">
                            <div class="card-content h-100">
                                <div class="card-body">
                                    <h4 class="card-title">Top Destinations</h4>
                                </div>

                                <div id="carousel-area" class="carousel slide" data-ride="carousel">
                                    <ol class="carousel-indicators">
                                        @for (var i = 0; i < Model.Count; i++)
                                        {
                                            <li data-target="#carousel-area" data-slide-to="@i" class="@(i == 0 ? "active" : "")"></li>
                                        }
                                    </ol>

                                    <div class="carousel-inner" style="height: 500px;">
                                        @foreach (var destination in Model)
                                        {
                                            <div class="carousel-item @(Model.IndexOf(destination) == 0 ? "active" : "")">
                                                <div style="position: relative; padding-top: 60%; overflow: hidden; border-radius: 8px; display: flex; justify-content: center; align-items: center;">
                                                    <img src="@destination.Image" class="d-block w-100" style="position: absolute; top: 0; left: 0; width: 100%; height: 100%; object-fit: cover;" alt="@destination.City">
                                                </div>
                                                <div class="text-center p-3">
                                                    <h5 style="font-size: 1.5rem; font-weight: bold; margin: 0.5rem 0;">@destination.City</h5>
                                                    <p class="text-muted" style="margin: 10px;">@destination.Description</p>
                                                    <p class="text-muted" style="margin: 10px;">CAPACITY: @destination.Capacity</p>
                                                </div>
                                            </div>
                                        }
                                    </div>

                                    <a class="carousel-control-prev" href="#carousel-area" role="button" data-slide="prev">
                                        <span class="la la-angle-left" aria-hidden="true"></span>
                                        <span class="sr-only">Previous</span>
                                    </a>

                                    <a class="carousel-control-next" href="#carousel-area" role="button" data-slide="next">
                                        <span class="la la-angle-right" aria-hidden="true"></span>
                                        <span class="sr-only">Next</span>
                                    </a>
                                </div>
                            </div>
                        </div>
                    </div>

                    @await Component.InvokeAsync("_GuideList")
                </div>

                @await Component.InvokeAsync("_LastDestinations")
            </div>
        </div>
    </div>
    @await Component.InvokeAsync("_MemberLayoutFooter")

    <script src="~/member/theme-assets/vendors/js/vendors.min.js" type="text/javascript"></script>
    <script src="~/member/theme-assets/vendors/js/charts/chartist.min.js" type="text/javascript"></script>
    <script src="~/member/theme-assets/js/core/app-menu-lite.js" type="text/javascript"></script>
    <script src="~/member/theme-assets/js/core/app-lite.js" type="text/javascript"></script>
    <script src="~/member/theme-assets/js/scripts/pages/dashboard-lite.js" type="text/javascript"></script>
</body>
</html>

<script>
    document.addEventListener("DOMContentLoaded", function () {
        const cards = document.querySelectorAll('.match-height .card');
        let maxHeight = 0;

        cards.forEach(card => {
            card.style.height = 'auto'; // Önce sıfırla
            maxHeight = Math.max(maxHeight, card.offsetHeight);
        });

        cards.forEach(card => {
            card.style.height = maxHeight + 'px'; // Maksimum yüksekliği uygula
        });
    });
</script>
